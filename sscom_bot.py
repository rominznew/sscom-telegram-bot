import os
import json
import hashlib
import requests
from bs4 import BeautifulSoup
from telegram import Bot

SEEN_FILE = "seen_ads.json"
URL = "https://www.ss.com/ru/real-estate/flats/riga/ziepniekkalns/"
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# === –ó–∞–≥—Ä—É–∑–∫–∞ —É–∂–µ –≤–∏–¥–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π ===
def load_seen_ads():
    if not os.path.exists(SEEN_FILE):
        print(f"‚ö†Ô∏è –§–∞–π–ª {SEEN_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π []")
        return []
    try:
        with open(SEEN_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
            print(f"üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} —Ö—ç—à–µ–π –∏–∑ {SEEN_FILE}")
            return data
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {SEEN_FILE}: {e}")
        return []

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π ===
def save_seen_ads(seen_ads):
    try:
        with open(SEEN_FILE, "w", encoding="utf-8") as f:
            json.dump(seen_ads, f, ensure_ascii=False, indent=2)
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(seen_ads)} —Ö—ç—à–µ–π –≤ {SEEN_FILE}")
        with open(SEEN_FILE, "r", encoding="utf-8") as f:
            print(f"üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏: {f.read()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ {SEEN_FILE}: {e}")

# === –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π ===
def fetch_ads():
    print(f"üåê –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: {URL}")
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(URL, headers=headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status_code}")
        return []

    soup = BeautifulSoup(response.text, "html.parser")
    ads = []
    rows = soup.select("tr[id^='tr_'] td.msga2 > a")

    for link in rows:
        title = link.get_text(strip=True)
        href = link.get("href")
        if href and not href.startswith("http"):
            href = "https://www.ss.com" + href
        ads.append((title, href))

    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(ads)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π (–≤—Å–µ–≥–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ).")
    return ads

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram ===
def send_to_telegram(messages):
    if not TELEGRAM_TOKEN or not CHAT_ID:
        print("‚ùå TELEGRAM_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã!")
        return
    bot = Bot(token=TELEGRAM_TOKEN)
    for msg in messages:
        try:
            bot.send_message(chat_id=CHAT_ID, text=msg)
            print(f"üì¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {msg[:50]}...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
def main():
    print("‚ñ∂Ô∏è –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
    seen_ads = load_seen_ads()
    ads = fetch_ads()

    new_ads = []
    for title, link in ads:
        hash_id = hashlib.sha256((title + link).encode("utf-8")).hexdigest()
        if hash_id not in seen_ads:
            new_ads.append((title, link))
            seen_ads.append(hash_id)

    print(f"üÜï –ù–∞–π–¥–µ–Ω–æ {len(new_ads)} –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")
    if new_ads:
        messages = [f"{title}\n{link}" for title, link in new_ads]
        send_to_telegram(messages)
        save_seen_ads(seen_ads)
    else:
        print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.")

if __name__ == "__main__":
    main()
