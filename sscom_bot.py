import requests
from bs4 import BeautifulSoup
import json
import os
import hashlib
from telegram import Bot

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
URL = "https://www.ss.com/ru/real-estate/flats/riga/ziepniekkalns/"
SEEN_FILE = "seen_ads.json"

# === –§–£–ù–ö–¶–ò–ò ===
def load_seen_ads():
    if not os.path.exists(SEEN_FILE):
        print("‚ö†Ô∏è –§–∞–π–ª seen_ads.json –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π []")
        with open(SEEN_FILE, "w", encoding="utf-8") as f:
            f.write("[]")
        return []
    try:
        with open(SEEN_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
            print(f"üìñ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} —Ö—ç—à–µ–π –∏–∑ seen_ads.json")
            return data
    except json.JSONDecodeError:
        print("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON, –ø–µ—Ä–µ—Å–æ–∑–¥–∞—é —Ñ–∞–π–ª.")
        with open(SEEN_FILE, "w", encoding="utf-8") as f:
            f.write("[]")
        return []

def save_seen_ads(seen_ads):
    print(f"üíæ –ü—ã—Ç–∞—é—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å {len(seen_ads)} —Ö—ç—à–µ–π –≤ {SEEN_FILE}...")
    with open(SEEN_FILE, "w", encoding="utf-8") as f:
        json.dump(seen_ads, f, ensure_ascii=False, indent=2)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –∑–∞–ø–∏—Å–∞–Ω–æ
    with open(SEEN_FILE, "r", encoding="utf-8") as f:
        content = f.read()
        print(f"üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏:\n{content}")

def get_ads():
    print(f"üåê –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: {URL}")
    response = requests.get(URL, headers={"User-Agent": "Mozilla/5.0"})
    soup = BeautifulSoup(response.text, "html.parser")
    
    ads = []
    for row in soup.select("tr[id^='tr_']"):
        title_tag = row.select_one("td.msg2 a")
        if title_tag:
            title = title_tag.get_text(strip=True)
            link = "https://www.ss.com" + title_tag.get("href")
            ad_hash = hashlib.md5(link.encode()).hexdigest()
            ads.append({"title": title, "link": link, "hash": ad_hash})
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(ads)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π (–≤—Å–µ–≥–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ).")
    return ads

def send_to_telegram(bot, message):
    try:
        bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)
        print(f"üì¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message[:60]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

def main():
    print("‚ñ∂Ô∏è –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
    bot = Bot(token=TELEGRAM_TOKEN)

    seen_ads = load_seen_ads()
    ads = get_ads()

    new_ads = [ad for ad in ads if ad["hash"] not in seen_ads]
    print(f"üÜï –ù–∞–π–¥–µ–Ω–æ {len(new_ads)} –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")

    if new_ads:
        for ad in new_ads:
            send_to_telegram(bot, ad["title"] + "\n" + ad["link"])
            seen_ads.append(ad["hash"])
        save_seen_ads(seen_ads)
    else:
        print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.")

if __name__ == "__main__":
    main()
