import os
import requests
from bs4 import BeautifulSoup
import hashlib
import sys

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
CHAT_ID = os.getenv('CHAT_ID')
URL = "https://www.ss.com/ru/real-estate/flats/riga/ziepniekkalns/"

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
if not TELEGRAM_TOKEN or not CHAT_ID:
    print("‚ùå TELEGRAM_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    sys.exit(1)
else:
    print(f"‚úÖ TELEGRAM_TOKEN –∏ CHAT_ID –ø–æ–ª—É—á–µ–Ω—ã. (CHAT_ID={CHAT_ID})")

# --- –•—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π ---
sent_hashes = set()

def get_ad_hash(title, url):
    """–°–æ–∑–¥–∞—ë–º —Ö—ç—à –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ title + url."""
    return hashlib.md5(f"{title}-{url}".encode()).hexdigest()

def get_latest_ads():
    """–ü–∞—Ä—Å–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –∏—â–µ–º –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è."""
    print(f"üåê –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: {URL}")
    headers = {"User-Agent": "Mozilla/5.0"}
    try:
        response = requests.get(URL, headers=headers, timeout=10)
        response.raise_for_status()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return []

    soup = BeautifulSoup(response.text, 'html.parser')
    ads = soup.select('table.list tr[id^=tr_]')
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(ads)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")

    new_ads = []
    for ad in ads:
        link_tag = ad.select_one('a[href]')
        if not link_tag:
            continue

        title = link_tag.text.strip()
        relative_url = link_tag['href']
        full_url = 'https://www.ss.com' + relative_url

        ad_hash = get_ad_hash(title, full_url)
        if ad_hash not in sent_hashes:
            sent_hashes.add(ad_hash)
            print(f"‚ûï –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: {title} ({full_url})")
            new_ads.append((title, full_url))

    if not new_ads:
        print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.")
    return new_ads

def send_telegram_message(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": text}

    print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram: {text[:50]}...")
    try:
        r = requests.post(url, data=data, timeout=10)
        if r.status_code == 200:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {r.status_code} - {r.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Telegram API: {e}")

if __name__ == "__main__":
    print("‚ñ∂Ô∏è –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
    try:
        ads = get_latest_ads()
        for title, url in ads:
            message = f"üîî –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n{title}\n{url}"
            send_telegram_message(message)
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
