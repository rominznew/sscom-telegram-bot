import os
import json
import requests
from bs4 import BeautifulSoup

# ==== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ====
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
URL = "https://www.ss.com/ru/real-estate/flats/riga/ziepniekkalns/"
SEEN_FILE = "seen_ads.json"

HEADERS = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
}


# ==== –§—É–Ω–∫—Ü–∏–∏ ====
def send_telegram_message(message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": message}
    try:
        r = requests.post(url, data=payload)
        if r.status_code != 200:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ Telegram API: {r.status_code} {r.text}")
        else:
            print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")


def get_ads():
    """–ü–∞—Ä—Å–∏—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å SS.com."""
    try:
        print(f"üåê –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: {URL}")
        response = requests.get(URL, headers=HEADERS, timeout=20)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status_code}")
            return []

        soup = BeautifulSoup(response.text, "html.parser")
        rows = soup.select("tr[id^=tr_]")

        ads = []
        for row in rows:
            link = row.select_one("a")
            if link and "ss.com" in link.get("href", ""):
                ads.append(link["href"])
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(ads)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
        return ads
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
        return []


def load_seen_ads():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π."""
    if os.path.exists(SEEN_FILE):
        try:
            with open(SEEN_FILE, "r", encoding="utf-8") as f:
                return set(json.load(f))
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {SEEN_FILE}: {e}")
    return set()


def save_seen_ads(ads):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π."""
    try:
        with open(SEEN_FILE, "w", encoding="utf-8") as f:
            json.dump(list(ads), f)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è {SEEN_FILE}: {e}")


# ==== –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ ====
if not TELEGRAM_TOKEN or not CHAT_ID:
    print("‚ùå TELEGRAM_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
    exit(1)

print(f"‚úÖ TELEGRAM_TOKEN –∏ CHAT_ID –ø–æ–ª—É—á–µ–Ω—ã. (CHAT_ID={CHAT_ID})")
print("‚ñ∂Ô∏è –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")

ads = get_ads()
seen_ads = load_seen_ads()

new_ads = [ad for ad in ads if ad not in seen_ads]

if new_ads:
    message = f"–ù–∞–π–¥–µ–Ω–æ {len(new_ads)} –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π!\n" + "\n".join(new_ads[:5])
    send_telegram_message(message)
    save_seen_ads(seen_ads.union(new_ads))
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(new_ads)} –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")
else:
    print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç.")
